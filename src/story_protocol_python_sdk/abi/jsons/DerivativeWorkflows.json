[
  {
    "type": "constructor",
    "inputs": [
      {
        "name": "accessController",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "coreMetadataModule",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "ipAssetRegistry",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "licenseRegistry",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "licenseToken",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "licensingModule",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "pilTemplate",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "royaltyModule",
        "type": "address",
        "internalType": "address"
      }
    ],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "ACCESS_CONTROLLER",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "contract IAccessController"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "CORE_METADATA_MODULE",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "contract ICoreMetadataModule"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "IP_ASSET_REGISTRY",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "contract IIPAssetRegistry"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "LICENSE_REGISTRY",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "contract ILicenseRegistry"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "LICENSE_TOKEN",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "contract ILicenseToken"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "LICENSING_MODULE",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "contract ILicensingModule"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "PIL_TEMPLATE",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "contract IPILicenseTemplate"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "ROYALTY_MODULE",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "contract IRoyaltyModule"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "UPGRADE_INTERFACE_VERSION",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "string",
        "internalType": "string"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "authority",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "initialize",
    "inputs": [
      {
        "name": "accessManager",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "isConsumingScheduledOp",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "bytes4",
        "internalType": "bytes4"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "mintAndRegisterIpAndMakeDerivative",
    "inputs": [
      {
        "name": "spgNftContract",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "derivData",
        "type": "tuple",
        "internalType": "struct WorkflowStructs.MakeDerivative",
        "components": [
          {
            "name": "parentIpIds",
            "type": "address[]",
            "internalType": "address[]"
          },
          {
            "name": "licenseTemplate",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "licenseTermsIds",
            "type": "uint256[]",
            "internalType": "uint256[]"
          },
          {
            "name": "royaltyContext",
            "type": "bytes",
            "internalType": "bytes"
          },
          {
            "name": "maxMintingFee",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "maxRts",
            "type": "uint32",
            "internalType": "uint32"
          },
          {
            "name": "maxRevenueShare",
            "type": "uint32",
            "internalType": "uint32"
          }
        ]
      },
      {
        "name": "ipMetadata",
        "type": "tuple",
        "internalType": "struct WorkflowStructs.IPMetadata",
        "components": [
          {
            "name": "ipMetadataURI",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "ipMetadataHash",
            "type": "bytes32",
            "internalType": "bytes32"
          },
          {
            "name": "nftMetadataURI",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "nftMetadataHash",
            "type": "bytes32",
            "internalType": "bytes32"
          }
        ]
      },
      {
        "name": "recipient",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "allowDuplicates",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "outputs": [
      {
        "name": "ipId",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "tokenId",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "mintAndRegisterIpAndMakeDerivativeWithLicenseTokens",
    "inputs": [
      {
        "name": "spgNftContract",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "licenseTokenIds",
        "type": "uint256[]",
        "internalType": "uint256[]"
      },
      {
        "name": "royaltyContext",
        "type": "bytes",
        "internalType": "bytes"
      },
      {
        "name": "maxRts",
        "type": "uint32",
        "internalType": "uint32"
      },
      {
        "name": "ipMetadata",
        "type": "tuple",
        "internalType": "struct WorkflowStructs.IPMetadata",
        "components": [
          {
            "name": "ipMetadataURI",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "ipMetadataHash",
            "type": "bytes32",
            "internalType": "bytes32"
          },
          {
            "name": "nftMetadataURI",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "nftMetadataHash",
            "type": "bytes32",
            "internalType": "bytes32"
          }
        ]
      },
      {
        "name": "recipient",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "allowDuplicates",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "outputs": [
      {
        "name": "ipId",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "tokenId",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "multicall",
    "inputs": [
      {
        "name": "data",
        "type": "bytes[]",
        "internalType": "bytes[]"
      }
    ],
    "outputs": [
      {
        "name": "results",
        "type": "bytes[]",
        "internalType": "bytes[]"
      }
    ],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "onERC721Received",
    "inputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "",
        "type": "bytes",
        "internalType": "bytes"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bytes4",
        "internalType": "bytes4"
      }
    ],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "proxiableUUID",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "bytes32",
        "internalType": "bytes32"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "registerIpAndMakeDerivative",
    "inputs": [
      {
        "name": "nftContract",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "tokenId",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "derivData",
        "type": "tuple",
        "internalType": "struct WorkflowStructs.MakeDerivative",
        "components": [
          {
            "name": "parentIpIds",
            "type": "address[]",
            "internalType": "address[]"
          },
          {
            "name": "licenseTemplate",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "licenseTermsIds",
            "type": "uint256[]",
            "internalType": "uint256[]"
          },
          {
            "name": "royaltyContext",
            "type": "bytes",
            "internalType": "bytes"
          },
          {
            "name": "maxMintingFee",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "maxRts",
            "type": "uint32",
            "internalType": "uint32"
          },
          {
            "name": "maxRevenueShare",
            "type": "uint32",
            "internalType": "uint32"
          }
        ]
      },
      {
        "name": "ipMetadata",
        "type": "tuple",
        "internalType": "struct WorkflowStructs.IPMetadata",
        "components": [
          {
            "name": "ipMetadataURI",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "ipMetadataHash",
            "type": "bytes32",
            "internalType": "bytes32"
          },
          {
            "name": "nftMetadataURI",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "nftMetadataHash",
            "type": "bytes32",
            "internalType": "bytes32"
          }
        ]
      },
      {
        "name": "sigMetadataAndRegister",
        "type": "tuple",
        "internalType": "struct WorkflowStructs.SignatureData",
        "components": [
          {
            "name": "signer",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "deadline",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "signature",
            "type": "bytes",
            "internalType": "bytes"
          }
        ]
      }
    ],
    "outputs": [
      {
        "name": "ipId",
        "type": "address",
        "internalType": "address"
      }
    ],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "registerIpAndMakeDerivativeWithLicenseTokens",
    "inputs": [
      {
        "name": "nftContract",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "tokenId",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "licenseTokenIds",
        "type": "uint256[]",
        "internalType": "uint256[]"
      },
      {
        "name": "royaltyContext",
        "type": "bytes",
        "internalType": "bytes"
      },
      {
        "name": "maxRts",
        "type": "uint32",
        "internalType": "uint32"
      },
      {
        "name": "ipMetadata",
        "type": "tuple",
        "internalType": "struct WorkflowStructs.IPMetadata",
        "components": [
          {
            "name": "ipMetadataURI",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "ipMetadataHash",
            "type": "bytes32",
            "internalType": "bytes32"
          },
          {
            "name": "nftMetadataURI",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "nftMetadataHash",
            "type": "bytes32",
            "internalType": "bytes32"
          }
        ]
      },
      {
        "name": "sigMetadataAndRegister",
        "type": "tuple",
        "internalType": "struct WorkflowStructs.SignatureData",
        "components": [
          {
            "name": "signer",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "deadline",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "signature",
            "type": "bytes",
            "internalType": "bytes"
          }
        ]
      }
    ],
    "outputs": [
      {
        "name": "ipId",
        "type": "address",
        "internalType": "address"
      }
    ],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "setAuthority",
    "inputs": [
      {
        "name": "newAuthority",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "upgradeToAndCall",
    "inputs": [
      {
        "name": "newImplementation",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "data",
        "type": "bytes",
        "internalType": "bytes"
      }
    ],
    "outputs": [],
    "stateMutability": "payable"
  },
  {
    "type": "event",
    "name": "AuthorityUpdated",
    "inputs": [
      {
        "name": "authority",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "Initialized",
    "inputs": [
      {
        "name": "version",
        "type": "uint64",
        "indexed": false,
        "internalType": "uint64"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "Upgraded",
    "inputs": [
      {
        "name": "implementation",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      }
    ],
    "anonymous": false
  },
  {
    "type": "error",
    "name": "AccessManagedInvalidAuthority",
    "inputs": [
      {
        "name": "authority",
        "type": "address",
        "internalType": "address"
      }
    ]
  },
  {
    "type": "error",
    "name": "AccessManagedRequiredDelay",
    "inputs": [
      {
        "name": "caller",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "delay",
        "type": "uint32",
        "internalType": "uint32"
      }
    ]
  },
  {
    "type": "error",
    "name": "AccessManagedUnauthorized",
    "inputs": [
      {
        "name": "caller",
        "type": "address",
        "internalType": "address"
      }
    ]
  },
  {
    "type": "error",
    "name": "AddressEmptyCode",
    "inputs": [
      {
        "name": "target",
        "type": "address",
        "internalType": "address"
      }
    ]
  },
  {
    "type": "error",
    "name": "DerivativeWorkflows__CallerAndNotTokenOwner",
    "inputs": [
      {
        "name": "tokenId",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "caller",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "actualTokenOwner",
        "type": "address",
        "internalType": "address"
      }
    ]
  },
  {
    "type": "error",
    "name": "DerivativeWorkflows__EmptyLicenseTokens",
    "inputs": []
  },
  {
    "type": "error",
    "name": "DerivativeWorkflows__ZeroAddressParam",
    "inputs": []
  },
  {
    "type": "error",
    "name": "ERC1967InvalidImplementation",
    "inputs": [
      {
        "name": "implementation",
        "type": "address",
        "internalType": "address"
      }
    ]
  },
  {
    "type": "error",
    "name": "ERC1967NonPayable",
    "inputs": []
  },
  {
    "type": "error",
    "name": "FailedCall",
    "inputs": []
  },
  {
    "type": "error",
    "name": "InvalidInitialization",
    "inputs": []
  },
  {
    "type": "error",
    "name": "NotInitializing",
    "inputs": []
  },
  {
    "type": "error",
    "name": "SafeERC20FailedOperation",
    "inputs": [
      {
        "name": "token",
        "type": "address",
        "internalType": "address"
      }
    ]
  },
  {
    "type": "error",
    "name": "UUPSUnauthorizedCallContext",
    "inputs": []
  },
  {
    "type": "error",
    "name": "UUPSUnsupportedProxiableUUID",
    "inputs": [
      {
        "name": "slot",
        "type": "bytes32",
        "internalType": "bytes32"
      }
    ]
  },
  {
    "type": "error",
    "name": "Workflow__CallerNotAuthorizedToMint",
    "inputs": []
  }
]
